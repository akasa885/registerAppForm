version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: registerappform-app:latest
    container_name: registerappform-app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - APP_ENV=production
      - DB_CONNECTION=mysql
      - DB_PORT=3306
      - DB_DATABASE=registerappform
      - APP_KEY=${APP_KEY}
    networks:
      - eform-network
    depends_on:
      - db
      - cache

  nginx:
    image: nginx:alpine
    container_name: registerappform-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - eform-network

  db:
    image: mysql:8.0
    container_name: registerappform-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: registerappform
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - eform-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "33060:3306"

  cache:
    image: redis:latest
    container_name: registerappform-cache
    restart: unless-stopped
    ports:
      - "6379:6379"

networks:
  eform-network:
    driver: bridge
volumes:
  db_data: